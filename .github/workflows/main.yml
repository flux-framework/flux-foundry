on: [pull_request, push, merge_group]
name: ci
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  check-pr:
    name: validate commits
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - run: git fetch origin main
    - uses: flux-framework/pr-validator@master

  spelling:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Check Spelling
      uses: crate-ci/typos@v1.35.5

  build-macos:
    name: macos build only
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - name: Install dependencies
      run: scripts/install-deps-macos.sh
    - name: autogen, configure
      run: scripts/configure-macos.sh
    - name: make, including test programs
      run: make check -j4
    - name: tmate debug
      if: ${{ !cancelled() && runner.debug }}
      uses: mxschmitt/action-tmate@v3

  generate-matrix:
    # https://stackoverflow.com/questions/59977364
    name: Generate build matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - id: set-matrix
      run: echo "matrix=$(src/test/generate-matrix.py)" >> $GITHUB_OUTPUT
    - run: src/test/generate-matrix.py | jq -S .
    - run: echo "GITHUB_BRANCH=${GITHUB_REF#refs/heads}" >> $GITHUB_OUTPUT
    - run: echo "GITHUB_TAG=${GITHUB_REF#refs/tags}" >> $GITHUB_OUTPUT
    - run: echo "EVENT_NAME=${{ github.event_name }}" >> $GITHUB_OUTPUT

  ci-checks:
    needs: [generate-matrix]
    runs-on: ${{matrix.runner}}
    env:
      DOCKER_REPO: fluxrm/flux-foundry
      DOCKER_USERNAME: travisflux
      DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_TRAVISFLUX_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
      fail-fast: false
    name: ${{matrix.name}}
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: fetch annotated tag
      if: >
        (matrix.create_release || matrix.docker_tag) &&
        github.ref != 'refs/heads/main'
      run: |
        # Ensure git-describe works on a tag.
        #  (checkout@v4 action may have left current tag as
        #   lightweight instead of annotated. See
        #   https://github.com/actions/checkout/issues/290)
        #
        echo github.ref == ${{ github.ref }} ;
        git fetch -f origin ${{ github.ref }}:${{ github.ref }} ;
        echo git describe now reports $(git describe --always)

    - name: docker buildx
      uses: docker/setup-buildx-action@v3
      if: matrix.needs_buildx

    - name: docker-run-checks
      timeout-minutes: ${{matrix.timeout_minutes}}
      env: ${{matrix.env}}
      run: ${{matrix.command}}

    - name: tmate debug
      if: ${{ !cancelled() && runner.debug }}
      uses: mxschmitt/action-tmate@v3

    - name: annotate errors
      if: failure() || cancelled()
      env: ${{matrix.env}}
      run: src/test/checks-annotate.sh

    - name: coverage report
      if: success() && matrix.coverage
      env:
        DOCKER_REPO:
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: ${{matrix.coverage_flags}}

